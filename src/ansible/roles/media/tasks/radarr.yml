---
# Radarr
# Documentation: https://docs.linuxserver.io/images/docker-radarr
# Purpose: To help automate movement of media

- name: Create 'Radarr' docker volume
  become: true
  file:
    path: "{{ docker_data_radarr }}/config"
    state: directory
    mode: "0755"
    owner: root

- name: Run 'Radarr' - Docker Container
  when: extended_networking == true
  docker_container:
    name: radarr
    image: lscr.io/linuxserver/radarr
    restart_policy: unless-stopped
    pull: true
    networks:
      - name: docker_ipvlan
        ipv4_address: "{{ radarr_container_ip }}"
    env:
      PUID: "1000"
      PGID: "1000"
      VERSION: "docker"
    volumes:
      - "/mnt/nas/torrent-data:/data:rw"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "/mnt/nas/movies:/movies"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "{{ docker_data_radarr }}/config:/config"
    healthcheck:
      test: ["CMD", "curl", "-kL", "http://localhost:7878"]
      interval: 15s
      timeout: 10s
      retries: 5
    labels:
      com.centurylinklabs.watchtower.enable: "true"
      traefik.enable: "true"
      traefik.http.routers.radarr.entrypoints: "websecure,web"
      traefik.http.routers.radarr.tls: "true"
      traefik.http.routers.radarr.rule: "Host(`radarr.{{ domain_name }}`)"
      traefik.http.routers.radarr.service: "radarr"
      traefik.http.services.radarr.loadBalancer.server.port: "7878"
      traefik.http.routers.radarr.tls.certresolver: "letsencrypt"


- name: Run 'Radarr' - Docker Container
  when: extended_networking != true
  docker_container:
    name: radarr
    image: lscr.io/linuxserver/radarr
    restart_policy: unless-stopped
    pull: true
    ports:
      - 7878:7878
    env:
      PUID: "1000"
      PGID: "1000"
      VERSION: "docker"
    volumes:
      - "/mnt/nas/torrent-data:/data:rw"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "/mnt/nas/movies:/movies"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "{{ docker_data_radarr }}/config:/config"
    healthcheck:
      test: ["CMD", "curl", "-kL", "http://localhost:7878"]
      interval: 15s
      timeout: 10s
      retries: 5
    labels:
      com.centurylinklabs.watchtower.enable: "true"